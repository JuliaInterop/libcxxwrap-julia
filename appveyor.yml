environment:
  matrix:
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x64/julia-latest-win64.exe"
    CMAKE_GEN: "Visual Studio 14 2015 Win64"
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x86/julia-latest-win32.exe"
    CMAKE_GEN: "Visual Studio 14 2015"

branches:
  only:
    - master
    - /release-.*/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: true

install:
  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12"
# Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile(
        $env:JULIA_URL,
        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
  - mkdir build
  - cd build
  - cmake -G "%CMAKE_GEN%" -DJulia_EXECUTABLE=C:\projects\julia\bin\julia -DCMAKE_INSTALL_PREFIX=..\install\usr ..
  - cmake --build . --config Release --target install

test_script:
  - ctest -V -C Release

after_test:
  - cmake --build . --config Release --target create_zip
  - cd ..
  - copy install\libcxxwrap-julia*.zip .
  - echo %APPVEYOR_JOB_NAME%

artifacts:
  - path: 'libcxxwrap-julia*.zip'

deploy:
  provider: GitHub
  auth_token:
    secure: gT/6HUmJMkLU89J2qu3FZ/OR2Velz//TSA/GJr65M1iNRjTimZLnAk73oRPGtA7d # your encrypted token from GitHub
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
