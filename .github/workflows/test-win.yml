name: test-win
on:
  - push
  - pull_request
    
defaults:
  run:
    shell: bash
    
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.3'
          - 'nightly'
        os:
          - windows-latest
        arch:
          - x64
          - x86
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Config 32bit
        if: ${{ matrix.arch == 'x86'}}
        run: |
            mkdir build
            cd build
            cmake -G "Visual Studio 16 2019" -A Win32 -DOVERRIDES_PATH=$HOMEDRIVE/$HOMEPATH/.julia/artifacts/Overrides.toml -DOVERRIDE_ROOT=../install/usr -DAPPEND_OVERRIDES_TOML=ON -DCMAKE_INSTALL_PREFIX=../install/usr ..
      - name: Config 64bit
        if: ${{ matrix.arch == 'x64'}}
        run: |
            mkdir build
            cd build
            cmake -G "Visual Studio 16 2019" -A x64 -DOVERRIDES_PATH=$HOMEDRIVE/$HOMEPATH/.julia/artifacts/Overrides.toml -DOVERRIDE_ROOT=../install/usr -DAPPEND_OVERRIDES_TOML=ON -DCMAKE_INSTALL_PREFIX=../install/usr ..
      - name: Test
        run: |
            cd build
            cmake --build . --config Release --target install
            julia -e "using Pkg; pkg\"add CxxWrap#master\"; using CxxWrap"
            ctest -C Release -V
